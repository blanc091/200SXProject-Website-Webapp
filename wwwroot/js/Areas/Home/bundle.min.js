document.addEventListener('DOMContentLoaded', function () {
    var logoutLink = document.getElementById("logoutLink");
    console.log('DOM fully loaded and parsed');

    if (logoutLink) {
        logoutLink.addEventListener("click", function (event) {
            console.log('Logout link clicked');
            event.preventDefault();
            var csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch('/loginregister/logout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': csrfToken
                }
            }).then(response => {
                if (response.ok) {
                    console.log('Logout successful');
                    window.location.href = '/';
                } else {
                    console.error("Logout failed");
                }
            }).catch(error => {
                console.error('Error:', error);
            });
        });
    } else {
        console.log('Logout link not found or user not logged in.');
    }
});

document.addEventListener('DOMContentLoaded', function () {
    const scrollToTopBtn = document.createElement('button');
    scrollToTopBtn.innerText = 'Top';
    scrollToTopBtn.id = 'scrollToTop';
    scrollToTopBtn.style.position = 'fixed';
    scrollToTopBtn.style.bottom = '100px';
    scrollToTopBtn.style.right = '10px';
    scrollToTopBtn.style.display = 'none';
    scrollToTopBtn.style.zIndex = '1000';
    scrollToTopBtn.style.padding = '10px 15px';
    scrollToTopBtn.style.backgroundColor = 'white';
    scrollToTopBtn.style.color = 'blue';
    scrollToTopBtn.style.border = 'none';
    scrollToTopBtn.style.borderRadius = '5px';
    scrollToTopBtn.style.cursor = 'pointer';
    scrollToTopBtn.style.fontSize = '16px';
    scrollToTopBtn.style.height = '30px';
    scrollToTopBtn.style.width = '60px';
    scrollToTopBtn.style.boxShadow = '0 2px 5px rgba(0, 0, 0, 0.2)';
    scrollToTopBtn.style.transition = 'opacity 0.5s ease';
    scrollToTopBtn.style.opacity = '0';
    scrollToTopBtn.style.textAlign = 'center';
    scrollToTopBtn.style.display = 'flex';
    scrollToTopBtn.style.alignItems = 'center';
    scrollToTopBtn.style.justifyContent = 'center';
    document.body.appendChild(scrollToTopBtn);
    window.addEventListener('scroll', function () {
        const scrollTop = window.scrollY || document.documentElement.scrollTop;
        const documentHeight = document.documentElement.scrollHeight;
        const windowHeight = window.innerHeight;

        if (scrollTop > (documentHeight - windowHeight) * 0.25) {
            if (scrollToTopBtn.style.opacity === '0' || !scrollToTopBtn.style.opacity) {
                scrollToTopBtn.style.display = 'flex'; 
                setTimeout(() => {
                    scrollToTopBtn.style.opacity = '1';
                }, 10);
            }
        } else {
            if (scrollToTopBtn.style.opacity === '1') {
                scrollToTopBtn.style.opacity = '0'; 
                setTimeout(() => {
                    scrollToTopBtn.style.display = 'none'; 
                }, 500);
            }
        }
    });
    scrollToTopBtn.addEventListener('click', function () {
        window.scrollTo({ top: 0, behavior: 'smooth' });
    });
});
function scrollToElement(elementId) {
    var element = document.getElementById(elementId);
    if (element) {
        element.scrollIntoView({ behavior: 'smooth' });
    } else {
        console.error(`${elementId} not found!`);
    }
}
document.addEventListener("DOMContentLoaded", () => {
    const deleteLinks = document.querySelectorAll(".delete-comment-link");

    deleteLinks.forEach(link => {
        link.addEventListener("click", (event) => {
            event.preventDefault();
            const form = link.closest("form");
            if (form) {
                form.submit();
            }
        });
    });
});
document.addEventListener("DOMContentLoaded", function () {
    var itemAddedToCart = document.body.getAttribute('data-item-added');
    var isFormSubmitted = document.body.getAttribute('data-is-form-submitted');
    var isFormSuccess = document.body.getAttribute('data-is-form-success');
    var isUserLoggedIn = document.body.getAttribute('data-is-user-logged-in');
    var isFormRegisterSuccess = document.body.getAttribute('data-is-form-register-success');
    var isEmailVerifiedLogin = document.body.getAttribute('data-is-email-verified-login');
    var isUserVerified = document.body.getAttribute('data-is-user-verified');
    var isEntrySuccess = document.body.getAttribute('is-entry-success');
    var userExists = document.body.getAttribute('data-user-exists');
    var passResetEmailSent = document.body.getAttribute('data-is-pass-reset-email-sent');
    var isPassResetSuccess = document.body.getAttribute('data-is-pass-reset-success');
    var isNewsletterSubbed = document.body.getAttribute('data-is-newsletter-subbed');
    var isNewsletterError = document.body.getAttribute('data-is-newsletter-error');
    var isNiceTry = document.body.getAttribute('data-is-nice-try');
    var formSubmitted = isFormSubmitted === "True";
    var formSuccess = isFormSuccess === "True";
    var commentSubmitted = document.body.getAttribute('data-is-comment-posted');
    var unsubscribed = document.body.getAttribute('data-unsubscribed'); 
    var userDeleted = document.body.getAttribute('data-is-user-deleted');

    console.log("Current Pathname:", window.location.pathname);
    if (window.location.pathname.startsWith('/detailed-user-build')) {
        scrollToElement("detailedViewSection");
    }
    if (window.location.pathname.startsWith('/products/detailed-product-view')) {
        scrollToElement("detailedProductViewSection");
    }
    if (window.location.pathname.startsWith('/checkout/your-order')) {
        scrollToElement("orderSuccess");
    }
    switch (window.location.pathname) {
        case '/mainten-app':
            scrollToElement("maintenApp");
            break;
        case '/login-page':
            scrollToElement("header");
            break;
        case '/reset-password':
        case '/forgot-my-password':
        case '/reset-my-password':
        case '/newsletter/create-newsletter-admin':
            scrollToElement("maintenApp");
            break;
        case '/register-new-account':
            scrollToElement("registerFormSpan");
            break;
        case '/newsletter/subscribe':
            scrollToElement("newsletterFormSpan");
            break;
        case '/add-new-build':
            scrollToElement("addBuild");
            break;
        case '/user-builds':
            scrollToElement("userContentDash");
            break;
        case '/products/view-products':
            scrollToElement("productsDash");
            break;
        case '/cart/view-cart':
            scrollToElement("cartView");
            break;
        case '/checkout/view-checkout':
            scrollToElement("checkoutView");
            break;
        case '/pendingorders/get-all-orders-admin':
            scrollToElement("ordersAll");
            break;
        case '/account/user-profile':
            scrollToElement("userProfileDash");
            break;
        case '/pendingorders/view-my-orders':
            scrollToElement("customerOrders");
            break;
        case '/cart/remove-cart-item':
            scrollToElement("cartView");
            break;
        case '/account/delete-account-confirmation':
            scrollToElement("userProfileDashDelete");
            break;
    }
    if ((isUserLoggedIn && !formSubmitted) ||
        (formSubmitted && formSuccess) ||
        isFormRegisterSuccess == "yes" ||
        isEmailVerifiedLogin == "yes" ||
        isUserVerified == 'no' ||
        isPassResetSuccess == "yes" ||
        isEntrySuccess == "yes" ||
        userExists == "yes" ||
        isNiceTry == "yes" ||
        isNewsletterSubbed == "yes" ||
        commentSubmitted == "yes" ||
        isUserLoggedIn == "no" ||
        unsubscribed == "yes" ||
        userDeleted == 'yes' ||
        itemAddedToCart == "yes" ||
        passResetEmailSent == "yes") {
        setTimeout(function () {
            $('#messageModal').fadeOut(1250);
        }, 3000);
    }    
    if (formSubmitted && !formSuccess) {
        scrollToContactForm();
    }
    if (window.location.pathname != '/account/login-account') {
        window.addEventListener('scroll', function () {
            var introElement = document.getElementById('intro');
            if (introElement) {
                if (window.scrollY > 0) {
                    introElement.classList.add('hidden');
                } else {
                    introElement.classList.remove('hidden');
                }
            }
        });
    }    
    fetch('/api/is-logged-in')
        .then(response => response.json())
        .then(isUserLoggedIn => {
            if (isUserLoggedIn && window.location.pathname === '/') {
                scrollToElement("posts");
                $('#tibi').css("display", "flex");
            }
        });
    function scrollToContactForm() {
        var contactForm = document.getElementById('contactForm');
        if (contactForm) {
            contactForm.scrollIntoView({ behavior: 'smooth' });
        } else {
            console.error('Contact form not found!');
        }
    }
    $(document).ready(function () {
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.has('scrollToContactForm')) {
            scrollToContactForm();
        }

        var contactLink = document.getElementById('contactLink');
        if (contactLink) {
            contactLink.addEventListener('click', function (event) {
                event.preventDefault();
                if (window.location.pathname === '/home/index') {
                    scrollToContactForm();
                } else {
                    window.location.href = '/home/index?scrollToContactForm=true';
                }
            });
        }
    });
});

document.addEventListener('DOMContentLoaded', function () {
    var modal = document.getElementById('cookieModal');
    //localStorage.removeItem('cookieConsent');
    if (modal) {
        modal.style.display = 'none';
        document.body.classList.remove('modal-open');
    }
    var userChoice = localStorage.getItem('cookieConsent');
    if (userChoice !== 'accepted' && userChoice !== 'denied') {
        if (modal) {
            modal.style.display = 'block';
            document.body.classList.add('modal-open');
        }
    }
    document.getElementById('acceptCookies').addEventListener('click', function () {
        localStorage.setItem('cookieConsent', 'accepted');
        loadGoogleAnalytics();
        loadGoogleAds();
        console.log('Google Analytics and Ads scripts appended to head');
        if (modal) {
            modal.style.display = 'none';
            document.body.classList.remove('modal-open');
        }
        localStorage.setItem('scrollToTopAfterReload', 'true');
        location.reload();

    });
    window.onload = function () {
        if (localStorage.getItem('scrollToTopAfterReload') === 'true') {
            setTimeout(() => {
                window.focus();
                window.scrollTo(0, 0);
            }, 100); 
            localStorage.removeItem('scrollToTopAfterReload');
        }
    };
    document.getElementById('denyCookies').addEventListener('click', function () {
        localStorage.setItem('cookieConsent', 'denied');
        console.log('User denied cookie consent');
        if (modal) {
            modal.style.display = 'none';
            document.body.classList.remove('modal-open');
        }
        location.reload();
    });
});

function loadGoogleAnalytics() {
    if (!document.getElementById('google-analytics-script')) {
        const script = document.createElement('script');
        script.id = 'google-analytics-script';
        script.src = 'https://www.googletagmanager.com/gtag/js?id=G-6TGFNLDLZ5';
        script.async = true;

        // Add script to head and log confirmation once loaded
        script.onload = function () {
            console.log('Google Analytics script loaded');
            console.log(document.getElementById('google-analytics-script'));
        };

        document.head.appendChild(script);
    } else {
        console.log('Google Analytics script already loaded');
    }
}
function loadGoogleAds() {
    var adsScript = document.createElement('script');
    adsScript.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8385228399742318';
    adsScript.async = true;
    adsScript.crossOrigin = 'anonymous';
    document.head.appendChild(adsScript);
    console.log('Google Ads script loaded');
}

function removeGoogleAnalytics() {
    var gtagScript = document.querySelector('script[src="https://www.googletagmanager.com/gtag/js?id=G-6TGFNLDLZ5"]');
    if (gtagScript) {
        gtagScript.parentNode.removeChild(gtagScript);
    }

    var inlineScript = document.querySelector('script[data-gtag-init]');
    if (inlineScript) {
        inlineScript.parentNode.removeChild(inlineScript);
    }

    if (window.dataLayer) {
        window.dataLayer = [];
    }
}
function removeGoogleAds() {
    var adsScript = document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8385228399742318"]');
    if (adsScript) {
        adsScript.parentNode.removeChild(adsScript);
    }
}


document.addEventListener('DOMContentLoaded', function () {
    const isWebView = /WebView|wv/i.test(navigator.userAgent);
    const isMobile = window.innerWidth <= 768 || /Mobi|Android|iPhone|iPad|iPod/i.test(navigator.userAgent) || isWebView;
    const isAuthenticated = document.body.getAttribute('data-is-authenticated') === 'true';
    const button = document.createElement('button');
    button.id = 'tibi';
    Object.assign(button.style, {
        position: 'fixed',
        top: '200px',
        right: '15px',
        zIndex: '1000',
        padding: '10px 15px',
        backgroundColor: 'rgba(255, 255, 255, 0.5)',
        color: 'blue',
        border: 'none',
        borderRadius: '5px',
        cursor: 'pointer',
        fontSize: '10px',
        height: '25px',
        width: '50px',
        boxShadow: '0 2px 5px rgba(0, 0, 0, 0.2)',
        transition: 'opacity 0.5s ease',
        opacity: '0',
        visibility: 'hidden',
        textAlign: 'center',
        display: 'none',
        alignItems: 'center',
        justifyContent: 'center',
    });
    button.innerText = isAuthenticated ? 'Profile' : 'Login';
    button.addEventListener('click', function () {
        if (isAuthenticated) {
            window.location.href = '/account/user-profile';
        } else {
            const returnUrl = encodeURIComponent(window.location.pathname + window.location.search);
            window.location.href = '/login-page?returnUrl=' + returnUrl;
        }
    });
    document.body.appendChild(button);
    let lastScrollTop = window.scrollY || document.documentElement.scrollTop;
    function updateButtonVisibility() {
        const scrollTop = window.scrollY || document.documentElement.scrollTop;
        const documentHeight = document.documentElement.scrollHeight;
        const windowHeight = window.innerHeight;

        console.log({
            isMobile,
            isWebView,
            scrollTop,
            documentHeight,
            windowHeight,
        });

        const shouldShowButton = scrollTop > (documentHeight - windowHeight) * 0.05;
        if (shouldShowButton) {
            if (button.style.visibility === 'hidden') {
                button.style.display = 'flex';
                setTimeout(() => {
                    button.style.opacity = '1';
                    button.style.visibility = 'visible';
                }, 10);
            }
        } else {
            if (!isMobile && button.style.visibility === 'visible') {
                button.style.opacity = '0';
                setTimeout(() => {
                    button.style.visibility = 'hidden';
                    button.style.display = 'none';
                }, 500);
            }
        }
        if (scrollTop < lastScrollTop && scrollTop < (documentHeight - windowHeight) * 0.05 && button.style.visibility === 'visible') {
            button.style.opacity = '0';
            setTimeout(() => {
                button.style.visibility = 'hidden';
                button.style.display = 'none';
            }, 500);
        }
        lastScrollTop = scrollTop;
    }
    updateButtonVisibility();
    window.addEventListener('scroll', updateButtonVisibility);
    setInterval(() => {
        const currentScrollTop = window.scrollY || document.documentElement.scrollTop;
        if (currentScrollTop !== lastScrollTop) {
            updateButtonVisibility();
            lastScrollTop = currentScrollTop;
        }
    }, 250);
});

function onRecaptchaLoad() {
    if (typeof grecaptcha !== 'undefined') {
        grecaptcha.ready(function () {
            try {
                const forms = [
                    { formId: "contactForm", recaptchaId: "g-recaptcha-contact" },
                    { formId: "newsletterForm", recaptchaId: "g-recaptcha-newsletter" },
                    { formId: "registerForm", recaptchaId: "g-recaptcha-register" }
                ];
                forms.forEach(({ formId, recaptchaId }) => {
                    grecaptcha.render(recaptchaId, {
                        'sitekey': '6LfHIYgqAAAAALHD85A5uSVmIOeCS4Q458X6_LIv',
                        'callback': function (token) {
                            console.log(`${formId} token received:`, token);
                            onSubmitWithEvent(token, window.lastClickedButtonEvent);
                        },
                        'size': 'invisible'
                    });
                });
            } catch (error) {
                console.error("Error initializing reCAPTCHA render:", error);
            }
        });
    } else {
        console.error('reCAPTCHA library not loaded.');
    }
};
document.addEventListener("DOMContentLoaded", function () {
    const buttons = document.querySelectorAll('.g-recaptcha');
    buttons.forEach(button => {
        button.addEventListener("click", function (e) {
            console.log("Button clicked, saving event:", e);
            window.lastClickedButtonEvent = e;
        });
    });
});
window.onSubmitWithEvent = function (token, event) {
    console.log("ReCAPTCHA token received:", token);
    if (!event) {
        console.warn("Event is null, attempting fallback to lastClickedButtonEvent.");
        event = window.lastClickedButtonEvent;
    }
    if (!event || !event.target) {
        console.error("Event or event target is invalid. Cannot proceed:", event);
        return;
    }
    const formId = event.target.getAttribute('data-formid');
    console.log("Form ID extracted:", formId);
    const form = document.getElementById(formId);
    if (!form) {
        console.error("No form found for ID:", formId);
        return;
    }
    const recaptchaInputName = formId === "contactForm"
        ? "gRecaptchaResponseContact"
        : formId === "newsletterForm"
            ? "gRecaptchaResponseNewsletter"
            : formId === "registerForm"
                ? "gRecaptchaResponseRegister"
                : null;
    const recaptchaResponse = form.querySelector(`input[name="${recaptchaInputName}"]`);
    console.log("Hidden input found:", recaptchaResponse);
    if (!recaptchaResponse) {
        console.error("No reCAPTCHA input found with name:", recaptchaInputName);
        return;
    }
    recaptchaResponse.value = token;
    console.log("Submitting form with ID:", formId);
    form.submit();
};
